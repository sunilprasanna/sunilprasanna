name: Update Version on Release

on:
  release:
    types:
      - prereleased

permissions: write-all

jobs:
  update_version:
    name: "[chore] Merge pull request from development to release"
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: development

      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14.x

      - name: Run yarn all-aboard
        env:
          GH_TOKEN: ${{ secrets.MERGE_TOKEN }}
        run: |
          git config --global user.email "spbsparky@gmail.com"
          git config --global user.name "Sunil Babu"
          git remote set-url origin https://sunilprasanna:${{ secrets.MERGE_TOKEN }}@github.com/sunilprasanna/sunilprasanna.git 
          yarn add semver
          export VERSION=$(cat version.txt)
          export RELEASE_VERSION=$(node -pe "require('semver').inc('${VERSION}', 'patch').trim()")
          git checkout development
          git checkout -b ${RELEASE_VERSION}
          echo ${RELEASE_VERSION} > version.txt
          git add version.txt
          git commit -m "chore: update to version ${RELEASE_VERSION}"
          git push --set-upstream origin ${RELEASE_VERSION}
          echo -e "\n\n\nðŸš‚ Ready for departure ðŸš‚ "
          gh pr create -H ${RELEASE_VERSION} -B development -t "${RELEASE_VERSION}" -b "${RELEASE_VERSION} -> development"
          num=$(gh api repos/:owner/:repo/pulls -q ".[] | select(.head.ref  == \"development\") | select(.base.ref == \"${RELEASE_VERSION}\") | .number")
          gh pr merge ${num} --merge --admin
          git fetch origin development release
          gh pr create -H development -B release -t "${{github.event.release.name}}" -b "$${{github.event.release.name}} merge to release"
          num=$(gh api repos/:owner/:repo/pulls -q ".[] | select(.head.ref  == \"release\") | select(.base.ref == \"development\") | .number")
          gh pr merge ${num} --merge --admin

      - name: Slack Staging Notification
        uses: bryannice/gitactions-slack-notification@2.0.0
        env:
          SLACK_INCOMING_WEBHOOK: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
          SLACK_MESSAGE: "The staging release has been merged for the backend"
          SLACK_TITLE: "Staging Release"
