name: Update Version on Production

on:
  release:
    types:
      - released

permissions: write-all

jobs:
  update_version:
    name: "[chore] Merge pull request from release to production"
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - name: Create a pull request
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.MERGE_TOKEN }}
        run: |
          git fetch origin release master
          gh pr create -H release -B master -t "${{github.event.release.name}}" -b "$${{github.event.release.name}} merge to master"

      - name: Wait for build to succeed
        uses: fountainhead/action-wait-for-check@v1.1.0
        id: wait-for-build
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: build
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Merge pull request
        if: steps.wait-for-build.outputs.conclusion == 'success'
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.MERGE_TOKEN }}
        run: |
          num=$(gh api repos/:owner/:repo/pulls -q ".[] | select(.head.ref  == \"release\") | select(.base.ref == \"master\") | .number")
          gh pr merge ${num} --merge --admin
      - name: Slack Production Notification
        uses: bryannice/gitactions-slack-notification@2.0.0
        env:
          SLACK_INCOMING_WEBHOOK: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
          SLACK_MESSAGE: "The production release has been merged for the backend"
          SLACK_TITLE: "Production Release"
