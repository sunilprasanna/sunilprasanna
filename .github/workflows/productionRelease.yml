name: Update Version on Production

on:
  release:
    types:
      - released

permissions: write-all

jobs:
  update_version:
    name: "[chore] Merge pull request from release to production"
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: release
      - name: Create a pull request
        shell: bash
        if: ${{ steps.check-pr.outputs.num == '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.MERGE_TOKEN }}
        run: |
          git fetch origin release master
          code=$(git diff --exit-code --quiet origin/release...origin/master || echo $?)
          if [ $code -ne 0 ]; then
            gh pr create -H master -B release -t "${{github.event.release.name}}" -b "$${{github.event.release.name}} merge to master"
          fi
      - name: Merge a pull request if exist
        shell: bash
        id: merge-pr
        env:
          GITHUB_TOKEN: ${{ secrets.MERGE_TOKEN }}
        run: |
          num=$(gh api repos/:owner/:repo/pulls -q ".[] | select(.head.ref  == \"master\") | select(.base.ref == \"release\") | .number")
          if [ -n "$num" ]; then
            gh pr merge ${num} --merge --admin
            echo "num=$num" >> $GITHUB_OUTPUT
          fi

      - name: Slack Production Notification
        uses: bryannice/gitactions-slack-notification@2.0.0
        env:
          SLACK_INCOMING_WEBHOOK: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
          SLACK_MESSAGE: "The production release has been merged for the backend"
          SLACK_TITLE: "Production Release"
